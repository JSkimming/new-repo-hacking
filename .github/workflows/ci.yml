# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: CI

on:
  push:
    branches:
    - master
    tags:
    - v*

  pull_request:
    branches:
    - master

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    name: Build and publish

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.4
      with:
          versionSpec: '5.x'

    - name: Use GitVersion
      uses: gittools/actions/gitversion/execute@v0.9.4
      id: gitversion

    - name: Set PackageVersion for tags
      if: startsWith(github.ref, 'refs/tags/v')
      run: echo '::set-env name=PACKAGE_VERSION::${{ steps.gitversion.outputs.nuGetVersionV2 }}'

    - name: Set PackageVersion for non tags
      if: startsWith(github.ref, 'refs/tags/v') != true
      run: echo '::set-env name=PACKAGE_VERSION::${{ steps.gitversion.outputs.nuGetVersionV2 }}-${{ steps.gitversion.outputs.shortSha }}'

    # See https://andrewlock.net/version-vs-versionsuffix-vs-packageversion-what-do-they-all-mean/
    - name: NuGet Package
      run: >-
        dotnet pack
        -c Release
        --include-source
        -p:PackageVersion=$PACKAGE_VERSION 
        -p:VersionPrefix="${{ steps.gitversion.outputs.majorMinorPatch }}"
        -p:InformationalVersion="${{ steps.gitversion.outputs.informationalVersion }}"

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: src/**/*.nupkg
        if-no-files-found: error

    - name: Add GitHub NuGet Source
      run: >-
        dotnet nuget add source https://nuget.pkg.github.com/JSkimming/index.json
        --name github
        --username JSkimming
        --password ${{ secrets.GITHUB_TOKEN }}
        --store-password-in-clear-text

    - name: NuGet GitHub Push
      run: >-
        dotnet nuget push
        src/NewRepo.Hacking/bin/Release/NewRepo.Hacking.$PACKAGE_VERSION.nupkg
        --source github
        --skip-duplicate

    # - name: NuGet push
    #   run: foreach ($file in get-childitem -Path artifacts -Filter *.nupkg -Name) { dotnet nuget push artifacts/$file -s https://api.nuget.org/v3/index.json -k ${{ secrets.NuGetApiKey }} --skip-duplicate }
